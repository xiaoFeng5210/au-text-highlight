{"version":3,"file":"bundle.cjs.js","sources":["../src/core/index.ts","../src/index.ts"],"sourcesContent":["/**\n * 构建正则\n * @param keywords\n */\nexport function createRegexFromKeywords(keywords: string | string[]): RegExp | undefined {\n  if (typeof keywords === 'string') {\n    return new RegExp(`\\\\b${keywords}\\\\b`, 'gi')\n  }\n  if (Array.isArray(keywords)) {\n    // 将所有关键字用 | 分隔，并加入 \\b 以确保匹配整个单词，关键字先进行转义\n    return new RegExp(`\\\\b(${keywords.join('|')})\\\\b`, 'gi')\n  }\n}\n\nexport function matchKeywordsWithPositions(str: string, keywords: string | string[]) {\n  const regex = createRegexFromKeywords(keywords)\n  const matches = []\n  let match: RegExpExecArray | null\n\n  // 使用 exec 遍历所有匹配项\n  // eslint-disable-next-line no-cond-assign\n  while ((match = (regex as RegExp).exec(str)) !== null) {\n    console.log(match, '------match')\n    matches.push({\n      keyword: match[0],\n      start: match.index,\n      end: match.index + match[0].length,\n    })\n  }\n\n  return matches\n}\n","import type { DeafultConfig } from './types'\nimport { matchKeywordsWithPositions } from './core'\n\n/**\n * 核心方法\n * @param config\n */\nfunction textHighlight(config: DeafultConfig) {\n  const { text, keywords } = config\n  const match = matchKeywordsWithPositions(text, keywords)\n  console.log(match)\n}\n\nexport default textHighlight\n"],"names":["matchKeywordsWithPositions","str","keywords","match","regex","RegExp","concat","Array","isArray","join","createRegexFromKeywords","matches","exec","console","log","push","keyword","start","index","end","length","config","text"],"mappings":"aAcgB,SAAAA,EAA2BC,EAAaC,GAOtD,IANA,IAEIC,EAFEC,EAXF,SAAkCF,GACtC,MAAwB,iBAAbA,EACF,IAAIG,OAAO,MAAAC,OAAMJ,EAAa,OAAE,MAErCK,MAAMC,QAAQN,GAET,IAAIG,OAAO,OAAAC,OAAOJ,EAASO,KAAK,KAAI,QAAQ,WAFrD,CAIF,CAGgBC,CAAwBR,GAChCS,EAAU,GAKiC,QAAzCR,EAASC,EAAiBQ,KAAKX,KACrCY,QAAQC,IAAIX,EAAO,eACnBQ,EAAQI,KAAK,CACXC,QAASb,EAAM,GACfc,MAAOd,EAAMe,MACbC,IAAKhB,EAAMe,MAAQf,EAAM,GAAGiB,SAIhC,OAAOT,CACT,gBCxBA,SAAuBU,GACb,IACFlB,EAAQH,EADaqB,EAAMC,KAAND,EAAMnB,UAEjCW,QAAQC,IAAIX,EACd"}